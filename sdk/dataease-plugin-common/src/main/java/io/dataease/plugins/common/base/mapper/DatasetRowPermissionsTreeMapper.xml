<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.dataease.plugins.common.base.mapper.DatasetRowPermissionsTreeMapper">
  <resultMap id="BaseResultMap" type="io.dataease.plugins.common.base.domain.DatasetRowPermissionsTree">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="auth_target_type" jdbcType="VARCHAR" property="authTargetType" />
    <result column="auth_target_id" jdbcType="BIGINT" property="authTargetId" />
    <result column="dataset_id" jdbcType="VARCHAR" property="datasetId" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.dataease.plugins.common.base.domain.DatasetRowPermissionsTreeWithBLOBs">
    <result column="expression_tree" jdbcType="LONGVARCHAR" property="expressionTree" />
    <result column="white_list_user" jdbcType="LONGVARCHAR" property="whiteListUser" />
    <result column="white_list_role" jdbcType="LONGVARCHAR" property="whiteListRole" />
    <result column="white_list_dept" jdbcType="LONGVARCHAR" property="whiteListDept" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `enable`, auth_target_type, auth_target_id, dataset_id, update_time
  </sql>
  <sql id="Blob_Column_List">
    expression_tree, white_list_user, white_list_role, white_list_dept
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.dataease.plugins.common.base.domain.DatasetRowPermissionsTreeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dataset_row_permissions_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.dataease.plugins.common.base.domain.DatasetRowPermissionsTreeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dataset_row_permissions_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dataset_row_permissions_tree
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from dataset_row_permissions_tree
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.dataease.plugins.common.base.domain.DatasetRowPermissionsTreeExample">
    delete from dataset_row_permissions_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.dataease.plugins.common.base.domain.DatasetRowPermissionsTreeWithBLOBs">
    insert into dataset_row_permissions_tree (id, `enable`, auth_target_type,
      auth_target_id, dataset_id, update_time,
      expression_tree, white_list_user,
      white_list_role, white_list_dept)
    values (#{id,jdbcType=VARCHAR}, #{enable,jdbcType=BIT}, #{authTargetType,jdbcType=VARCHAR},
      #{authTargetId,jdbcType=BIGINT}, #{datasetId,jdbcType=VARCHAR}, #{updateTime,jdbcType=BIGINT},
      #{expressionTree,jdbcType=LONGVARCHAR}, #{whiteListUser,jdbcType=LONGVARCHAR},
      #{whiteListRole,jdbcType=LONGVARCHAR}, #{whiteListDept,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.dataease.plugins.common.base.domain.DatasetRowPermissionsTreeWithBLOBs">
    insert into dataset_row_permissions_tree
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enable != null">
        `enable`,
      </if>
      <if test="authTargetType != null">
        auth_target_type,
      </if>
      <if test="authTargetId != null">
        auth_target_id,
      </if>
      <if test="datasetId != null">
        dataset_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="expressionTree != null">
        expression_tree,
      </if>
      <if test="whiteListUser != null">
        white_list_user,
      </if>
      <if test="whiteListRole != null">
        white_list_role,
      </if>
      <if test="whiteListDept != null">
        white_list_dept,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="authTargetType != null">
        #{authTargetType,jdbcType=VARCHAR},
      </if>
      <if test="authTargetId != null">
        #{authTargetId,jdbcType=BIGINT},
      </if>
      <if test="datasetId != null">
        #{datasetId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="expressionTree != null">
        #{expressionTree,jdbcType=LONGVARCHAR},
      </if>
      <if test="whiteListUser != null">
        #{whiteListUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="whiteListRole != null">
        #{whiteListRole,jdbcType=LONGVARCHAR},
      </if>
      <if test="whiteListDept != null">
        #{whiteListDept,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.dataease.plugins.common.base.domain.DatasetRowPermissionsTreeExample" resultType="java.lang.Long">
    select count(*) from dataset_row_permissions_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dataset_row_permissions_tree
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.enable != null">
        `enable` = #{record.enable,jdbcType=BIT},
      </if>
      <if test="record.authTargetType != null">
        auth_target_type = #{record.authTargetType,jdbcType=VARCHAR},
      </if>
      <if test="record.authTargetId != null">
        auth_target_id = #{record.authTargetId,jdbcType=BIGINT},
      </if>
      <if test="record.datasetId != null">
        dataset_id = #{record.datasetId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.expressionTree != null">
        expression_tree = #{record.expressionTree,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.whiteListUser != null">
        white_list_user = #{record.whiteListUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.whiteListRole != null">
        white_list_role = #{record.whiteListRole,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.whiteListDept != null">
        white_list_dept = #{record.whiteListDept,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update dataset_row_permissions_tree
    set id = #{record.id,jdbcType=VARCHAR},
      `enable` = #{record.enable,jdbcType=BIT},
      auth_target_type = #{record.authTargetType,jdbcType=VARCHAR},
      auth_target_id = #{record.authTargetId,jdbcType=BIGINT},
      dataset_id = #{record.datasetId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      expression_tree = #{record.expressionTree,jdbcType=LONGVARCHAR},
      white_list_user = #{record.whiteListUser,jdbcType=LONGVARCHAR},
      white_list_role = #{record.whiteListRole,jdbcType=LONGVARCHAR},
      white_list_dept = #{record.whiteListDept,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dataset_row_permissions_tree
    set id = #{record.id,jdbcType=VARCHAR},
      `enable` = #{record.enable,jdbcType=BIT},
      auth_target_type = #{record.authTargetType,jdbcType=VARCHAR},
      auth_target_id = #{record.authTargetId,jdbcType=BIGINT},
      dataset_id = #{record.datasetId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.dataease.plugins.common.base.domain.DatasetRowPermissionsTreeWithBLOBs">
    update dataset_row_permissions_tree
    <set>
      <if test="enable != null">
        `enable` = #{enable,jdbcType=BIT},
      </if>
      <if test="authTargetType != null">
        auth_target_type = #{authTargetType,jdbcType=VARCHAR},
      </if>
      <if test="authTargetId != null">
        auth_target_id = #{authTargetId,jdbcType=BIGINT},
      </if>
      <if test="datasetId != null">
        dataset_id = #{datasetId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="expressionTree != null">
        expression_tree = #{expressionTree,jdbcType=LONGVARCHAR},
      </if>
      <if test="whiteListUser != null">
        white_list_user = #{whiteListUser,jdbcType=LONGVARCHAR},
      </if>
      <if test="whiteListRole != null">
        white_list_role = #{whiteListRole,jdbcType=LONGVARCHAR},
      </if>
      <if test="whiteListDept != null">
        white_list_dept = #{whiteListDept,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.dataease.plugins.common.base.domain.DatasetRowPermissionsTreeWithBLOBs">
    update dataset_row_permissions_tree
    set `enable` = #{enable,jdbcType=BIT},
      auth_target_type = #{authTargetType,jdbcType=VARCHAR},
      auth_target_id = #{authTargetId,jdbcType=BIGINT},
      dataset_id = #{datasetId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=BIGINT},
      expression_tree = #{expressionTree,jdbcType=LONGVARCHAR},
      white_list_user = #{whiteListUser,jdbcType=LONGVARCHAR},
      white_list_role = #{whiteListRole,jdbcType=LONGVARCHAR},
      white_list_dept = #{whiteListDept,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.dataease.plugins.common.base.domain.DatasetRowPermissionsTree">
    update dataset_row_permissions_tree
    set `enable` = #{enable,jdbcType=BIT},
      auth_target_type = #{authTargetType,jdbcType=VARCHAR},
      auth_target_id = #{authTargetId,jdbcType=BIGINT},
      dataset_id = #{datasetId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
