<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.dataease.ext.ExtDataSourceMapper">

    <resultMap id="BaseResultMapDTO" type="io.dataease.dto.DatasourceDTO"
               extends="io.dataease.plugins.common.base.mapper.DatasourceMapper.ResultMapWithBLOBs">
        <result column="privileges" property="privileges"/>
    </resultMap>
    <resultMap id="RelationResultMap" type="io.dataease.dto.RelationDTO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="auths" property="auths"/>
        <collection property="subRelation" ofType="io.dataease.dto.RelationDTO">
            <id column="sub_id" property="id"/>
            <result column="sub_name" property="name"/>
            <result column="sub_auths" property="auths"/>
            <result column="sub_type" property="type"/>
        </collection>
    </resultMap>



    <select id="queryUnion" resultMap="BaseResultMapDTO">
        select datasource.*,
        authInfo.privileges as `privileges`
        from (select GET_V_AUTH_MODEL_ID_P_USE (#{userId}, 'link') cids) t,datasource
        left join (
        SELECT
        auth_source,
        group_concat( DISTINCT sys_auth_detail.privilege_extend ) as `privileges`
        FROM
        (
        `sys_auth`
        LEFT JOIN `sys_auth_detail` ON ((
        `sys_auth`.`id` = `sys_auth_detail`.`auth_id`
        )))
        WHERE
        sys_auth_detail.privilege_value = 1
        AND sys_auth.auth_source_type = 'link'
        AND (
        (
        sys_auth.auth_target_type = 'dept'
        AND sys_auth.auth_target IN ( SELECT dept_id FROM sys_user WHERE user_id = #{userId} )
        )
        OR (
        sys_auth.auth_target_type = 'user'
        AND sys_auth.auth_target = #{userId}
        )
        OR (
        sys_auth.auth_target_type = 'role'
        AND sys_auth.auth_target IN ( SELECT role_id FROM sys_users_roles WHERE user_id = #{userId} )
        )
        )
        GROUP BY
        `sys_auth`.`auth_source`
        ) authInfo
        on datasource.id = authInfo.auth_source
        <where>
            FIND_IN_SET(datasource.id,cids)
            <if test="id != null">
                and id = #{id,jdbcType=VARCHAR}
            </if>
            <if test="name != null">
                and `name` like concat('%',#{name,jdbcType=VARCHAR},'%')
            </if>
            <if test="desc != null">
                and `desc` = #{desc,jdbcType=VARCHAR}
            </if>
            <if test="type != null">
                and `type` = #{type,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=BIGINT}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=BIGINT}
            </if>
            <if test="configuration != null">
                and configuration = #{configuration,jdbcType=LONGVARCHAR}
            </if>
        </where>
        <if test="sort != null">
            order by #{sort}
        </if>
    </select>

    <select id="findByPanelId" resultMap="BaseResultMapDTO">
        SELECT DISTINCT datasource.id,
                        datasource.`name`,
                        datasource.DESC,
                        datasource.type
        FROM chart_view
                 INNER JOIN panel_view ON chart_view.id = panel_view.chart_view_id
                 INNER JOIN dataset_table ON chart_view.table_id = dataset_table.id
                 INNER JOIN datasource ON dataset_table.data_source_id = datasource.id
        WHERE panel_view.panel_id = #{panelId}
    </select>

    <select id="findByTableIds" resultMap="BaseResultMapDTO">
        SELECT DISTINCT datasource.id,
        datasource.`name`,
        datasource.DESC,
        datasource.type
        FROM dataset_table
        INNER JOIN datasource ON dataset_table.data_source_id = datasource.id
        WHERE dataset_table.id in
        <foreach collection="tableIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryDetails" resultMap="BaseResultMapDTO">
        select datasource.*,
               get_auths(id, 'link', #{userId}) as `privileges`
        from datasource
        where id = #{datasourceId}
    </select>

    <select id="queryDatasourceRelation" resultType="io.dataease.dto.RelationDTO" resultMap="RelationResultMap">
        select
            dt.id,
            dt.name,
            dt_auth.auths,
            'dataset' `type`,
            pg.id sub_id,
            pg.name sub_name,
            pg_auth.auths sub_auths,
            if(pg.id is not null,'panel',null) sub_type
        from
            datasource ds
        join dataset_table dt on dt.data_source_id = ds.id
        left join
        (
            select
                t_dt.id,group_concat(distinct sad.privilege_type) auths
            from
                dataset_table t_dt
            left join sys_auth sa on sa.auth_source = t_dt.id
            left join sys_auth_detail sad on sa.id = sad.auth_id
            where
                sa.auth_source_type = 'dataset'
            and
                sad.privilege_value = 1
            and
            (
                (
                    sa.auth_target_type = 'dept'
                    AND sa.auth_target in ( SELECT dept_id FROM sys_user WHERE user_id =  #{userId,jdbcType=BIGINT} )
                )
            or
                (
                    sa.auth_target_type = 'user'
                    AND sa.auth_target =  #{userId,jdbcType=BIGINT}
                )
            or
                (
                    sa.auth_target_type = 'role'
                    AND sa.auth_target in ( SELECT role_id FROM sys_users_roles WHERE user_id =  #{userId,jdbcType=BIGINT} )
                )
            )
            group by sa.auth_source
        ) dt_auth on dt.id = dt_auth.id
        left join chart_view cv on cv.table_id = dt.id
        left join panel_group pg on cv.scene_id = pg.id
        left join
        (
            select
                t_pg.id,group_concat(distinct sad.privilege_type) auths
            from
                panel_group t_pg
            left join sys_auth sa on sa.auth_source = t_pg.id
            left join sys_auth_detail sad on sa.id = sad.auth_id
            where
                sa.auth_source_type = 'panel'
            and
                sad.privilege_value = 1
            and
            (
                (
                    sa.auth_target_type = 'dept'
                    AND sa.auth_target in ( SELECT dept_id FROM sys_user WHERE user_id =  #{userId,jdbcType=BIGINT} )
                )
            OR
                (
                    sa.auth_target_type = 'user'
                    AND sa.auth_target =  #{userId,jdbcType=BIGINT}
                )
            OR
                (
                    sa.auth_target_type = 'role'
                    AND sa.auth_target in ( SELECT role_id FROM sys_users_roles WHERE user_id =  #{userId,jdbcType=BIGINT} )
                )
            )
            group by sa.auth_source
        ) pg_auth on pg_auth.id = pg.id
        where ds.id=#{datasourceId,jdbcType=VARCHAR}
        group by id,sub_id
        order by id
    </select>
</mapper>
